# -*- coding: utf-8 -*-
#
# ${PROJECT_NAME} documentation build configuration file, created by
# FindSphinx.cmake from conf.py.in.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.autodoc',
              'sphinx.ext.coverage',
              'sphinx.ext.intersphinx',
              'sphinxcontrib.blockdiag',
              'sphinxcontrib.seqdiag']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'${PROJECT_NAME}'
copyright = u'{CURRENT_YEAR}, Impinj'
author = u'Impinj'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = u'${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}'
# The full version, including alpha/beta/rc tags.
release = u'${PROJECT_VERSION}'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'alabaster'

html_sidebars = {
    '**': [
        'about.html',
        'navigation.html',
        'relations.html',  # needs 'show_related': True theme option to display
        'searchbox.html',
        'donate.html',
    ]
}

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    'extra_nav_links': {},
    'page_width': '100%'
}

# If the package has doxygen docs, add a links to each target's generated docs
doxygen_dirs = "${SPHINX_DOCS_LINKS}"
if doxygen_dirs:
    for kv_pair in doxygen_dirs.split(";"):
        try:
            link_text, link_dest = kv_pair.split("=")
            html_theme_options['extra_nav_links'][link_text] = "../../{}".format(link_dest)
        except ValueError:
            pass

# If the package is not the root Skyrocket docs page, add a link to the root index
if "${BUILDROOT}" != "OFF" and not "${PROVIDES_DOCS_ROOT_INDEX}":
    html_theme_options['extra_nav_links']['Documentation Home'] = '../../../index.html'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = []
${STATIC_CONTENT_PATH_APPEND_PY}
if "${DBUS_API_DOCS_ENABLED}":
    html_static_path.append("_static")


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = '${PROJECT_NAME}doc'
